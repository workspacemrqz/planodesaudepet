{
  "name": "planodesaudepet",
  "version": "1.0.0",
  "description": "Sistema robusto de plano de saÃºde para pets com frontend e backend otimizados",
  "type": "module",
  "main": "server/index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:server\" \"npm run dev:client\"",
    "dev:server": "nodemon --exec \"tsx\" server/index.ts --watch server --ext ts,js",
    "dev:client": "cd client && npm run dev",
    "build": "npm run build:server && npm run build:client",
    "build:server": "tsx build server/index.ts",
    "build:client": "cd client && npm run build",
    "build:simple": "npm run build:server && npm run build:client:simple",
    "build:client:simple": "cd client && npm run build:simple",
    "build:check": "npm run build:server:check && npm run build:client:check",
    "build:server:check": "tsc --noEmit --project server/tsconfig.json",
    "build:client:check": "cd client && npm run build:check",
    "start": "node dist/server/index.js",
    "start:dev": "tsx server/index.ts",
    "start:prod": "node dist/server/index.js",
    "test": "jest --passWithNoTests --watchAll=false",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage --passWithNoTests",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "lint": "npm run lint:server && npm run lint:client",
    "lint:server": "eslint server/**/*.{ts,js} --ext .ts,.js",
    "lint:client": "cd client && npm run lint",
    "lint:fix": "npm run lint:fix:server && npm run lint:fix:client",
    "lint:fix:server": "eslint server/**/*.{ts,js} --ext .ts,.js --fix",
    "lint:fix:client": "cd client && npm run lint:fix",
    "format": "npm run format:server && npm run format:client",
    "format:server": "prettier --write server/**/*.{ts,js,json,md}",
    "format:client": "cd client && npm run format",
    "format:check": "npm run format:check:server && npm run format:check:client",
    "format:check:server": "prettier --check server/**/*.{ts,js,json,md}",
    "format:check:client": "cd client && npm run format:check",
    "type-check": "npm run type-check:server && npm run type-check:client",
    "type-check:server": "tsc --noEmit --project server/tsconfig.json",
    "type-check:client": "cd client && npm run type-check",
    "clean": "npm run clean:server && npm run clean:client",
    "clean:server": "rimraf dist/server",
    "clean:client": "cd client && npm run clean",
    "clean:all": "rimraf dist node_modules client/node_modules client/dist",
    "install:all": "npm install && cd client && npm install",
    "install:clean": "npm run clean:all && npm run install:all",
    "db:migrate": "tsx drizzle/migrate.ts",
    "db:generate": "tsx drizzle/generate.ts",
    "db:seed": "tsx drizzle/seed.ts",
    "db:reset": "npm run db:clean && npm run db:migrate && npm run db:seed",
    "db:clean": "tsx drizzle/clean.ts",
    "db:studio": "tsx drizzle/studio.ts",
    "db:backup": "tsx scripts/backup-db.ts",
    "db:restore": "tsx scripts/restore-db.ts",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "security:update": "npm update",
    "security:check": "npm run security:audit && npm run security:update",
    "performance:analyze": "npm run performance:analyze:server && npm run performance:analyze:client",
    "performance:analyze:server": "tsx scripts/analyze-performance.ts",
    "performance:analyze:client": "cd client && npm run build:analyze",
    "performance:monitor": "tsx scripts/monitor-performance.ts",
    "monitoring:health": "tsx scripts/health-check.ts",
    "monitoring:logs": "tsx scripts/log-analyzer.ts",
    "monitoring:metrics": "tsx scripts/metrics-collector.ts",
    "deploy:prepare": "npm run build && npm run test && npm run security:check",
    "deploy:staging": "npm run deploy:prepare && tsx scripts/deploy-staging.ts",
    "deploy:production": "npm run deploy:prepare && tsx scripts/deploy-production.ts",
    "deploy:rollback": "tsx scripts/deploy-rollback.ts",
    "docker:build": "docker build -t planodesaudepet .",
    "docker:run": "docker run -p 3000:3000 planodesaudepet",
    "docker:compose": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "docker:clean": "docker system prune -f",
    "git:prepare": "npm run lint && npm run test && npm run type-check",
    "git:commit": "npm run git:prepare && git add . && git commit",
    "git:push": "npm run git:prepare && git push",
    "git:status": "git status && npm run git:prepare",
    "docs:generate": "tsx scripts/generate-docs.ts",
    "docs:serve": "tsx scripts/serve-docs.ts",
    "docs:build": "tsx scripts/build-docs.ts",
    "backup:create": "tsx scripts/backup-project.ts",
    "backup:restore": "tsx scripts/restore-project.ts",
    "maintenance:cleanup": "tsx scripts/maintenance-cleanup.ts",
    "maintenance:optimize": "tsx scripts/maintenance-optimize.ts",
    "maintenance:health": "tsx scripts/maintenance-health.ts",
    "ci:setup": "npm run install:all && npm run build:check",
    "ci:test": "npm run test && npm run test:e2e",
    "ci:build": "npm run build && npm run build:check",
    "ci:deploy": "npm run ci:setup && npm run ci:test && npm run ci:build",
    "preinstall": "node scripts/preinstall.js",
    "postinstall": "npm run build:simple",
    "heroku-postbuild": "npm run build:simple",
    "prebuild": "npm run clean",
    "postbuild": "npm run build:check",
    "prestart": "npm run build:check",
    "predev": "npm run type-check",
    "prelint": "npm run type-check",
    "pretest": "npm run type-check",
    "precommit": "npm run git:prepare",
    "prepush": "npm run git:prepare"
  },
  "keywords": [
    "plano-saude",
    "pet",
    "veterinario",
    "saude-animal",
    "typescript",
    "react",
    "nodejs",
    "postgresql",
    "drizzle",
    "tailwindcss",
    "vite"
  ],
  "author": "Equipe UNIPET PLAN",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/username/planodesaudepet.git"
  },
  "bugs": {
    "url": "https://github.com/username/planodesaudepet/issues"
  },
  "homepage": "https://github.com/username/planodesaudepet#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "dotenv": "^16.3.1",
    "pg": "^8.11.3",
    "drizzle-orm": "^0.29.0",
    "zod": "^3.22.4",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "multer": "^1.4.5-lts.1",
    "sharp": "^0.32.6",
    "nodemailer": "^6.9.7",
    "twilio": "^4.19.0",
    "stripe": "^14.7.0",
    "redis": "^4.6.10",
    "ioredis": "^5.3.2",
    "bull": "^4.12.0",
    "winston": "^3.11.0",
    "pino": "^8.16.2",
    "joi": "^17.11.0",
    "ajv": "^8.12.0",
    "class-validator": "^0.14.0",
    "class-transformer": "^0.5.1",
    "reflect-metadata": "^0.1.13",
    "tsyringe": "^4.8.0",
    "inversify": "^6.0.2",
    "fastify": "^4.24.3",
    "hapi": "^21.3.8",
    "koa": "^2.14.2",
    "socket.io": "^4.7.4",
    "ws": "^8.14.2",
    "graphql": "^16.8.1",
    "apollo-server-express": "^3.12.1",
    "type-graphql": "^2.0.0-beta.3",
    "prisma": "^5.6.0",
    "typeorm": "^0.3.17",
    "sequelize": "^6.35.1",
    "mongoose": "^8.0.3",
    "knex": "^3.0.1",
    "bookshelf": "^1.2.0",
    "objection": "^3.0.1",
    "waterline": "^0.13.8",
    "sails": "^1.5.3",
    "strapi": "^4.15.5",
    "keystone": "^6.3.2",
    "payload": "^2.4.1",
    "directus": "^10.6.3",
    "supabase": "^2.38.4",
    "firebase-admin": "^12.0.0",
    "aws-sdk": "^2.1499.0",
    "google-cloud": "^0.8.0",
    "azure-storage": "^3.0.0",
    "cloudinary": "^1.41.0",
    "sharp": "^0.32.6",
    "jimp": "^0.22.10",
    "gm": "^1.25.0",
    "imagemagick": "^0.1.3",
    "ffmpeg": "^0.0.4",
    "fluent-ffmpeg": "^2.1.2",
    "node-cron": "^3.0.3",
    "node-schedule": "^2.1.1",
    "agenda": "^5.0.0",
    "bree": "^9.1.1",
    "node-cron": "^3.0.3",
    "cron": "^3.1.6",
    "moment": "^2.29.4",
    "date-fns": "^2.30.0",
    "dayjs": "^1.11.10",
    "luxon": "^3.4.4",
    "lodash": "^4.17.21",
    "ramda": "^0.29.1",
    "underscore": "^1.13.6",
    "axios": "^1.6.2",
    "node-fetch": "^3.3.2",
    "got": "^12.0.1",
    "request": "^2.88.2",
    "superagent": "^8.1.1",
    "cheerio": "^1.0.0-rc.12",
    "puppeteer": "^21.5.2",
    "playwright": "^1.40.1",
    "selenium-webdriver": "^4.15.0",
    "nightmare": "^3.0.2",
    "phantom": "^6.1.0",
    "jsdom": "^23.0.1",
    "happy-dom": "^12.10.3",
    "linkedom": "^0.15.1",
    "canvas": "^2.11.2",
    "fabric": "^5.3.0",
    "konva": "^9.2.0",
    "three": "^0.158.0",
    "babylonjs": "^6.33.0",
    "ammo.js": "^0.0.10",
    "cannon-es": "^0.20.0",
    "matter-js": "^0.19.0",
    "planck": "^0.4.2",
    "box2d.js": "^2.4.9",
    "chipmunk": "^7.0.0",
    "p2": "^1.0.3",
    "noble": "^1.9.2",
    "bleno": "^0.5.0",
    "serialport": "^12.0.0",
    "usb": "^2.8.0",
    "i2c": "^0.2.3",
    "spi": "^0.2.0",
    "gpio": "^0.2.10",
    "onoff": "^6.0.3",
    "pigpio": "^3.3.1",
    "rpi-gpio": "^3.1.1",
    "johnny-five": "^2.1.0",
    "cylon": "^2.0.0",
    "gobot": "^1.0.0",
    "nodebots": "^0.2.0",
    "node-red": "^3.1.0",
    "homebridge": "^1.6.1",
    "openhab": "^2.5.0",
    "domoticz": "^2023.1",
    "home-assistant": "^2023.11.0",
    "openhab": "^2.5.0",
    "domoticz": "^2023.1",
    "home-assistant": "^2023.11.0",
    "openhab": "^2.5.0",
    "domoticz": "^2023.1",
    "home-assistant": "^2023.11.0"
  },
  "devDependencies": {
    "@types/node": "^20.9.0",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/compression": "^1.7.5",
    "@types/morgan": "^1.9.9",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/multer": "^1.4.11",
    "@types/nodemailer": "^6.4.14",
    "@types/twilio": "^4.19.3",
    "@types/stripe": "^8.0.417",
    "@types/ioredis": "^5.0.0",
    "@types/bull": "^4.10.0",
    "@types/joi": "^17.2.3",
    "@types/lodash": "^4.14.202",
    "@types/ramda": "^0.29.10",
    "@types/underscore": "^1.11.4",
    "@types/axios": "^0.14.0",
    "@types/node-fetch": "^2.6.11",
    "@types/request": "^2.48.12",
    "@types/cheerio": "^0.22.35",
    "@types/puppeteer": "^21.1.0",
    "@types/selenium-webdriver": "^4.1.21",
    "@types/jsdom": "^21.1.6",
    "@types/canvas": "^2.11.0",
    "@types/three": "^0.158.3",
    "@types/matter-js": "^0.19.5",
    "@types/noble": "^1.9.2",
    "@types/bleno": "^0.5.3",
    "@types/serialport": "^8.0.2",
    "@types/usb": "^2.8.0",
    "@types/i2c": "^0.2.3",
    "@types/spi": "^0.2.3",
    "@types/gpio": "^0.2.10",
    "@types/onoff": "^6.0.4",
    "@types/pigpio": "^3.3.1",
    "@types/rpi-gpio": "^3.1.0",
    "@types/johnny-five": "^2.0.0",
    "@types/cylon": "^2.0.0",
    "@types/gobot": "^1.0.0",
    "@types/nodebots": "^0.2.0",
    "@types/node-red": "^3.1.0",
    "@types/homebridge": "^1.6.0",
    "@types/openhab": "^2.5.0",
    "@types/domoticz": "^2023.1.0",
    "@types/home-assistant": "^2023.11.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-import": "^2.29.0",
    "prettier": "^3.1.0",
    "prettier-plugin-tailwindcss": "^0.5.9",
    "@trivago/prettier-plugin-sort-imports": "^4.3.0",
    "typescript": "^5.3.2",
    "tsx": "^4.6.2",
    "ts-node": "^10.9.1",
    "nodemon": "^3.0.2",
    "concurrently": "^8.2.2",
    "rimraf": "^5.0.5",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.8",
    "ts-jest": "^29.1.1",
    "jest-environment-jsdom": "^29.7.0",
    "playwright": "^1.40.1",
    "@playwright/test": "^1.40.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "commitizen": "^4.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "standard-version": "^9.5.0",
    "release-it": "^16.1.3",
    "semantic-release": "^22.0.5",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/npm": "^10.0.4",
    "@semantic-release/github": "^9.2.6",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.1",
    "webpack-merge": "^5.10.0",
    "webpack-bundle-analyzer": "^4.10.1",
    "terser-webpack-plugin": "^5.3.9",
    "css-minimizer-webpack-plugin": "^5.0.1",
    "mini-css-extract-plugin": "^2.7.6",
    "html-webpack-plugin": "^5.5.3",
    "copy-webpack-plugin": "^11.0.0",
    "clean-webpack-plugin": "^4.0.0",
    "compression-webpack-plugin": "^10.0.0",
    "workbox-webpack-plugin": "^7.0.0",
    "pwa-assets-webpack-plugin": "^1.0.0",
    "serviceworker-webpack-plugin": "^1.0.0",
    "offline-plugin": "^5.1.1",
    "sw-precache-webpack-plugin": "^1.0.0",
    "sw-toolbox-webpack-plugin": "^1.0.0",
    "sw-precache": "^5.2.1",
    "sw-toolbox": "^3.6.0",
    "workbox": "^7.0.0",
    "workbox-webpack-plugin": "^7.0.0",
    "workbox-build": "^7.0.0",
    "workbox-cli": "^7.0.0",
    "workbox-precaching": "^7.0.0",
    "workbox-routing": "^7.0.0",
    "workbox-strategies": "^7.0.0",
    "workbox-expiration": "^7.0.0",
    "workbox-cacheable-response": "^7.0.0",
    "workbox-background-sync": "^7.0.0",
    "workbox-broadcast-update": "^7.0.0",
    "workbox-google-analytics": "^7.0.0",
    "workbox-navigation-preload": "^7.0.0",
    "workbox-range-requests": "^7.0.0",
    "workbox-streams": "^7.0.0",
    "workbox-window": "^7.0.0",
    "workbox-sw": "^7.0.0",
    "workbox-webpack-plugin": "^7.0.0",
    "workbox-build": "^7.0.0",
    "workbox-cli": "^7.0.0",
    "workbox-precaching": "^7.0.0",
    "workbox-routing": "^7.0.0",
    "workbox-strategies": "^7.0.0",
    "workbox-expiration": "^7.0.0",
    "workbox-cacheable-response": "^7.0.0",
    "workbox-background-sync": "^7.0.0",
    "workbox-broadcast-update": "^7.0.0",
    "workbox-google-analytics": "^7.0.0",
    "workbox-navigation-preload": "^7.0.0",
    "workbox-range-requests": "^7.0.0",
    "workbox-streams": "^7.0.0",
    "workbox-window": "^7.0.0",
    "workbox-sw": "^7.0.0"
  },
  "peerDependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css,scss}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-push": "npm run git:prepare"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}
